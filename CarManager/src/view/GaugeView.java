package view;

import controller.CarDAO;
import java.text.NumberFormat;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Car;

/**
 *
 * @author Alexandre Marques - Josias
 */
public class GaugeView 
    extends 
        javax.swing.JFrame 
{
    private NumberFormat nf = NumberFormat.getInstance();
    
    /**
     * Creates new form GaugeView
     */
    public GaugeView()
    {
        nf.setMaximumFractionDigits( 2 );
        initComponents();
        tableRender();
    }
    
    private void tableRender()
    {
        DefaultTableModel model = (DefaultTableModel) tbSystem.getModel();
        
        tbSystem.setRowSorter( new TableRowSorter(model) );
        tbSystem.setDefaultEditor( Object.class, null );
        
        mountTable();
    }
    
    private void mountTable()
    {
        DefaultTableModel model = (DefaultTableModel) tbSystem.getModel();
        
        model.setNumRows( 0 );
        
        try
        {
            CarDAO dao = new CarDAO();
            
            for ( Car c : dao.getInformationCar() )
            {
                String[] logs = c.getLogs().split( "," );
                
                model.addRow( new Object[]
                {
                    logs[0],
                    Long.parseLong( logs[1] ) / 10000000,
                    nf.format( Double.parseDouble( logs[2] ) / 1000000000 ),
                    nf.format( ( Double.parseDouble( logs[3] ) / 100000000 ) % 2 ),
                    nf.format( Double.parseDouble( logs[5] ) / 1000000000 )
                });
            }
        }
        
        catch( Exception e )
        {
            throw new RuntimeException( e );
        }
    }
    
    private void selectedItem()
    {
        if( tbSystem.getSelectedRow() != -1 )
        {
            ggHour.setText( tbSystem.getValueAt( tbSystem.getSelectedRow(), 0 ).toString() );
            ggRpm.setText( tbSystem.getValueAt( tbSystem.getSelectedRow(), 1 ).toString() );
            ggMph.setText( tbSystem.getValueAt( tbSystem.getSelectedRow(), 2 ).toString() );
            ggThro.setText( tbSystem.getValueAt( tbSystem.getSelectedRow(), 3 ).toString() );
            ggfuel.setText( tbSystem.getValueAt( tbSystem.getSelectedRow(), 4 ).toString() );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSystem = new javax.swing.JTable();
        ggHour = new javax.swing.JTextField();
        ggRpm = new javax.swing.JTextField();
        ggMph = new javax.swing.JTextField();
        ggThro = new javax.swing.JTextField();
        ggfuel = new javax.swing.JTextField();
        btGrafic = new javax.swing.JButton();
        btMonitor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Informações do Veículo");
        setResizable(false);

        btExit.setText("Sair");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });

        tbSystem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Horarío", "RPM", "Km/h", "Aceleração (%)", "Reservatório"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSystem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSystemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSystem);

        ggHour.setEditable(false);
        ggHour.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ggRpm.setEditable(false);
        ggRpm.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ggMph.setEditable(false);
        ggMph.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ggThro.setEditable(false);
        ggThro.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ggfuel.setEditable(false);
        ggfuel.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btGrafic.setText("Gráfico");
        btGrafic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGraficActionPerformed(evt);
            }
        });

        btMonitor.setText("Alarmes");
        btMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMonitorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btGrafic, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ggHour, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ggRpm, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ggMph, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ggThro, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ggfuel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ggHour, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ggRpm, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ggMph, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ggThro, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ggfuel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btGrafic, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btExitActionPerformed

    private void tbSystemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSystemMouseClicked
        selectedItem();
    }//GEN-LAST:event_tbSystemMouseClicked

    private void btGraficActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGraficActionPerformed
        GraphicView graphic = new GraphicView();
        graphic.setVisible( true );
    }//GEN-LAST:event_btGraficActionPerformed

    private void btMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMonitorActionPerformed
        ReportView reportView = new ReportView();
        reportView.setVisible( true );
    }//GEN-LAST:event_btMonitorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GaugeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GaugeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GaugeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GaugeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GaugeView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.JButton btGrafic;
    private javax.swing.JButton btMonitor;
    private javax.swing.JTextField ggHour;
    private javax.swing.JTextField ggMph;
    private javax.swing.JTextField ggRpm;
    private javax.swing.JTextField ggThro;
    private javax.swing.JTextField ggfuel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbSystem;
    // End of variables declaration//GEN-END:variables
}
